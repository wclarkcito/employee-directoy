{"version":3,"sources":["utils/API.js","components/EmployeeDetail.js","components/Employee.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","EmployeeDetail","props","src","this","thumbnail","alt","first","last","phone","email","city","state","Component","Employee","search","results","queryResults","userInitialize","API","then","res","console","log","apiResults","data","setState","searchEmployees","query","toLowerCase","filter","item","name","includes","handleSearch","event","target","value","sortFirst","sortArray","sort","a","b","fa","fb","className","type","onChange","onClick","map","employee","picture","cell","location","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAGe,EACD,WACN,OAAOA,IAAMC,IAAN,4CAHE,GAGF,a,eCDMC,E,4JACjB,SAAOC,GAEH,OACI,+BAEI,+BAAI,qBAAKC,IAAKC,KAAKF,MAAMG,UAAWC,IAAI,cAAxC,OACA,6BAAKF,KAAKF,MAAMK,QAChB,6BAAKH,KAAKF,MAAMM,OAChB,6BAAKJ,KAAKF,MAAMO,QAChB,6BAAKL,KAAKF,MAAMQ,QAChB,6BAAKN,KAAKF,MAAMS,OAEhB,6BAAKP,KAAKF,MAAMU,e,GAbYC,aCGvBC,E,4MAEjBF,MAAQ,CACJG,OAAQ,GACRC,QAAS,GACTC,aAAc,I,EAQlBC,eAAiB,WACbC,IACKC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZ,IAAIG,EAAaH,EAAII,KAAKT,QAC1BM,QAAQC,IAAIC,GAOZ,EAAKE,SAAS,CAAEV,QAASQ,IACzB,EAAKE,SAAS,CAAET,aAAcO,Q,EAI1CG,gBAAkB,SAAAZ,GACd,IAAMa,EAAQb,EAAOc,cACrB,GAAID,EAAO,CACP,IAAIJ,EAAa,EAAKZ,MAAMI,QAC5BQ,EAAaA,EAAWM,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKzB,MAAMsB,cAAcI,SAASL,MAC9E,EAAKF,SAAS,CAAET,aAAcO,SAE9B,EAAKE,SAAS,CAAET,aAAc,EAAKL,MAAMI,W,EAIjDkB,aAAe,SAACC,GACZb,QAAQC,IAAIY,EAAMC,OAAOC,OACzB,EAAKX,SAAS,CAAEX,OAAQoB,EAAMC,OAAOC,S,EAUzCC,UAAY,WACR,IAAIC,EAAY,EAAK3B,MAAMK,aAC3BsB,EAAUC,MAAK,SAACC,EAAGC,GACf,IAAIC,EAAKF,EAAET,KAAKzB,MAAMsB,cAClBe,EAAKF,EAAEV,KAAKzB,MAAMsB,cAEtB,OAAIc,EAAKC,GACG,EAERD,EAAKC,EACE,EAEJ,KAEX,EAAKlB,SAAS,CAAET,aAAcsB,K,uDA3DlC,WACIjB,QAAQC,IAAI,qBACZnB,KAAKc,mB,oBA4DT,WACI,OACI,gCAII,qBAAK2B,UAAU,YAAf,SACI,sDAEJ,uBAAOC,KAAK,OAAOC,SAAU3C,KAAK8B,aAAcG,MAAOjC,KAAKQ,MAAMG,SAClE,kCACI,+BACI,qCACA,oBAAIiC,QAAS5C,KAAKkC,UAAlB,mBACA,sCACA,uCACA,uCACA,sCAEA,0CAEHlC,KAAKQ,MAAMK,aAAagC,KAAI,SAACC,GAE1B,OAAO,cAAC,EAAD,CAAgB3C,MAAO2C,EAASlB,KAAKzB,MACxCC,KAAM0C,EAASlB,KAAKxB,KACpBH,UAAW6C,EAASC,QAAQ9C,UAC5BK,MAAOwC,EAASxC,MAChBD,MAAOyC,EAASE,KAChBzC,KAAMuC,EAASG,SAAS1C,KACxBC,MAAOsC,EAASG,SAASzC,qB,GAnGfC,aCEvByC,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.775e596d.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nimport axios from \"axios\";\nconst quantity = 30\nexport default {\n    getUsers: function () {\n        return axios.get(`https://randomuser.me/api?results=${quantity}&nat=us`);\n    }\n}","\n\nimport React, { Component } from 'react'\n\nexport default class EmployeeDetail extends Component {\n    render(props) {\n\n        return (\n            <tr>\n                {/* .map on state results output a row in table(component) */}\n                <td><img src={this.props.thumbnail} alt=\"thumbnail\" /> </td>\n                <td>{this.props.first}</td>\n                <td>{this.props.last}</td>\n                <td>{this.props.phone}</td>\n                <td>{this.props.email}</td>\n                <td>{this.props.city}</td>\n\n                <td>{this.props.state}</td>\n            </tr>\n\n\n        )\n    }\n}\n","import API from '../utils/API';\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport EmployeeDetail from './EmployeeDetail';\n\n\n\nexport default class Employee extends Component {\n\n    state = {\n        search: \"\",\n        results: [],\n        queryResults: []\n    }\n\n    componentDidMount() {\n        console.log(\"component mounted\")\n        this.userInitialize()\n    }\n\n    userInitialize = () => {\n        API.getUsers()\n            .then(res => {\n                console.log(res)\n                let apiResults = res.data.results;\n                console.log(apiResults);\n                // apiResults = apiResults.map(item => ({\n                //     id: item.id,\n                //     name: item.name.first + item.name.last\n\n\n                // }))\n                this.setState({ results: apiResults })\n                this.setState({ queryResults: apiResults })\n            })\n    }\n\n    searchEmployees = search => {\n        const query = search.toLowerCase();\n        if (query) {\n            let apiResults = this.state.results;\n            apiResults = apiResults.filter(item => item.name.first.toLowerCase().includes(query))\n            this.setState({ queryResults: apiResults })\n        } else {\n            this.setState({ queryResults: this.state.results })\n        }\n    }\n\n    handleSearch = (event) => {\n        console.log(event.target.value)\n        this.setState({ search: event.target.value })\n\n    }\n\n    // componentDidUpdate() {\n    //     if (this.state.search) {\n    //         this.searchEmployees(this.state.search)\n\n    //     }\n    // }\n    sortFirst = () => {\n        let sortArray = this.state.queryResults\n        sortArray.sort((a, b) => {\n            let fa = a.name.first.toLowerCase(),\n                fb = b.name.first.toLowerCase();\n\n            if (fa < fb) {\n                return -1;\n            }\n            if (fa > fb) {\n                return 1;\n            }\n            return 0;\n        });\n        this.setState({ queryResults: sortArray })\n\n    }\n    render() {\n        return (\n            <div>\n\n\n\n                <div className=\"jumbotron\">\n                    <h1>Employee Directory</h1>\n                </div>\n                <input type=\"text\" onChange={this.handleSearch} value={this.state.search} />\n                <table>\n                    <tr>\n                        <th>img</th>\n                        <th onClick={this.sortFirst}>first</th>\n                        <th>last</th>\n                        <th>phone</th>\n                        <th>email</th>\n                        <th>city</th>\n\n                        <th>state</th>\n                    </tr>\n                    {this.state.queryResults.map((employee) => {\n\n                        return <EmployeeDetail first={employee.name.first}\n                            last={employee.name.last}\n                            thumbnail={employee.picture.thumbnail}\n                            email={employee.email}\n                            phone={employee.cell}\n                            city={employee.location.city}\n                            state={employee.location.state}\n                        />\n                    })}\n\n                </table>\n\n\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport Employee from './components/Employee'\n\nfunction App() {\n  return (\n    <Employee />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}